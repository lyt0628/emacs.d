:PROPERTIES:
:ID:       db7a9abc-a2c0-4df7-99b9-bd545e7331c1
:header-args: :tangle py/hashs.py :comments both
:END:
#+title: py/util/hashs

#+BEGIN_SRC python
  import math
  import distributions
#+END_SRC

对列表进行Hash,使用下面公式
#+BEGIN_SRC latex :results file :tangle no
  $ h_{a,b,w}(v) = \frac{a \cdot v + b}{w} $
#+END_SRC

#+RESULTS:
[[file:c:/Users/ASUS/AppData/Local/Temp/babel-Ns3xyL//EpNzXA-1.png]]

#+BEGIN_SRC python
  def hlist_linear(v, a, b, size):
      return math.floor(sum([slop*val+intercept/size for slop, val, intercept  in zip(v, a, b)]))
#+END_SRC

#+BEGIN_SRC python
  def hlist_linear2(v, a, b, size):
      return math.floor(sum([slop*val+b/size for slop, val  in zip(v, a)]))
#+END_SRC

E2LSH Hash 类. 定义为类是为了存储参数.
dims 表示数据维度.width 表示 hash桶大小.
E2LSH 也是线性的hash，斜率 slop 由高斯分布产生, 截距 intercept 由平均分布产生.
#+BEGIN_SRC python
  class E2LSH:
      def __init__(dims, width):
          self.dims = dims
          self.slop = distributions.gauss(dims)
          self.intercept = distributions.avange(0, width, dims)
          self.width = width

      def hash(v):
          return hlist_linear(v, self.slop, self.intercept, self.dims)
#+END_SRC
