:PROPERTIES:
:ID:       87ea9840-d0da-4ec6-a5b6-d1ab2636cb74
:END:
#+title: jbullet/collision/shape

* 形状定义阶段
形状定义阶段的主要目标有两个
1. 确定形状的定义概念
2. 为后面的碰撞检测算法提供足够的元信息


#+BEGIN_SRC plantuml :file tmp/adb898cb-95b7-4040-8f0a-24d67100a897.png
@startuml CollisionShape_Class_Diagram

skinparam class {
    BackgroundColor #F9F9F9
    BorderColor #333333
    ArrowColor #333333
}

package "jbullet.collision.shapes" {
  abstract class CollisionShape {
    __抽象属性__
    - userPointer: Object
    
    __核心抽象方法__
    + {abstract} getAabb(Transform, Vector3f, Vector3f): void
    + {abstract} calculateLocalInertia(float, Vector3f): void
    + {abstract} getShapeType(): BroadphaseNativeType
    + {abstract} setLocalScaling(Vector3f): void
    + {abstract} getLocalScaling(Vector3f): void
    + {abstract} setMargin(float): void
    + {abstract} getMargin(): float
    + {abstract} getName(): String
    
    __具体实现方法__
    + getBoundingSphere(Vector3f, float[]): void
    + getAngularMotionDisc(): float
    + calculateTemporalAabb(Transform, Vector3f, Vector3f, float, Vector3f, Vector3f): void
    + isPolyhedral(): boolean
    + isConvex(): boolean
    + isConcave(): boolean
    + isCompound(): boolean
    + isInfinite(): boolean
    + setUserPointer(Object): void
    + getUserPointer(): Object
  }

  class ConvexShape {
    __常量__
    + MAX_PREFERRED_PENETRATION_DIRECTIONS: int = 10
    
    __特有方法__
    + {abstract} localGetSupportingVertex(Vector3f, Vector3f): void
    + {abstract} localGetSupportingVertexWithoutMargin(Vector3f, Vector3f): void
    + {abstract} batchedUnitVectorGetSupportingVertexWithoutMargin(Vector3f[], Vector3f[], int): void
    + {abstract} getPreferredPenetrationDirection(int, Vector3f): void
  }

  class BoxShape {
    + BoxShape(Vector3f)
    __实现所有抽象方法__
  }

  class SphereShape {
    + SphereShape(float)
  }
}

CollisionShape <|-- ConvexShape
ConvexShape <|-- BoxShape
ConvexShape <|-- SphereShape
ConvexShape <|-- CylinderShape
ConvexShape <|-- ConeShape
ConvexShape <|-- ConvexHullShape

CollisionShape <|-- ConcaveShape
ConcaveShape <|-- BvhTriangleMeshShape
ConcaveShape <|-- HeightfieldTerrainShape

CollisionShape <|-- CompoundShape

note top of CollisionShape
  **关键设计特点**：
  1. 所有碰撞形状的基类
  2. 提供统一的物理属性计算接口
  3. 支持内存高效操作（使用Stack.alloc）
  4. 通过ShapeType实现多态行为
end note

@enduml
#+END_SRC

#+RESULTS:
[[file:tmp/adb898cb-95b7-4040-8f0a-24d67100a897.png]]

** CollistionShper 形状定义
JBUllet 的形状抽象分为三个层级
1. 形状
2. 凸面形状和凹面形状，以及层次的组合形状
3. 多面体形状，如 Box，Cylinder。 三角面形状和高度场形状

CollistionSharp 提供以下常见API：
|------------------+----------------------------------------------------------------------------|
| API              | 说明                                                                        |
|------------------+----------------------------------------------------------------------------|
| getAABB()        | 获取形状的 AABB 包围盒，用于宽相位检测                                          |
|------------------+----------------------------------------------------------------------------|
| getBoundingSharp | 获取形状的包围球，同样用于宽相位检测，因此使用不精确的基于 AABB 包围盒的包围球计算方式 |
|------------------+----------------------------------------------------------------------------|


碰撞的具体子类划分是确定的，因此在形状接口定义上使用了 子类标识模式(在接口中定义表示对象子类的接口，以使用子类特定API)
CollisionShape 有以下几种子类型，
|------------+------------------------|
| 子类型      | 说明                    |
|------------+------------------------|
| Polyhedral | 多面体形状，isa 凸形状    |
|------------+------------------------|
| Covex      | 凸形状                  |
|------------+------------------------|
| Concave    | 凹形状                  |
|------------+------------------------|
| Compound   | 复合形状                 |
|------------+------------------------|
| Inifine    | 无限形状，如 StaticPlane |
|------------+------------------------|

此外, CollisionShape 上还定义了 惯性计算的API，用于运动模拟时的计算.
以及 两个用于 修改形状定义的 属性 Margin, LocalScale.
这两个属性一般用于增大形状范围来在离散的碰撞计算情况下的保守计算.




** ConvexShape 凸形状定义
凸形状基于一些特有的元信息有更合适的碰撞计算方法, 因此需要划分出这个层级的子类。
|-------------------------------+---------------------------------------------|
| 元信息                         | 说明                                         |
|-------------------------------+---------------------------------------------|
| Supporting Point              | 支持点, 给定一个方向d, 凸形状在这个方向上的最远点. |
|-------------------------------+---------------------------------------------|
| PreferredPenetrationDirection | 优选穿透方向, 表示碰撞体碰撞时，合适的碰撞穿透方向. |
|                               | 碰撞时，JBullet 会优先尝试在这些方向上分离碰撞体  |
|-------------------------------+---------------------------------------------|


** Poluprefal 多面体凸形状
#+BEGIN_SRC plantuml :file tmp/0dff8e9e-c892-4e19-9f13-33726b9e3a07.png
@startuml
ConvexShape <|-- ConvexInternalShape
ConvexInternalShape <|-- PolyhedralConvexShape
PolyhedralConvexShape <|-- BoxShape
PolyhedralConvexShape <|-- ConvexHullShape
@enduml
#+END_SRC

#+RESULTS:
[[file:tmp/0dff8e9e-c892-4e19-9f13-33726b9e3a07.png]]

